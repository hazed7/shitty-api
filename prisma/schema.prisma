generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// enums
enum user_roles {
  admin
  customer
  picker
  packer
  shipper
}

enum order_status {
  pending
  processing
  shipped
  delivered
  cancelled
}

enum payment_status {
  pending
  authrorized
  refunded
  failed
}

enum payment_method {
  credit_card
  debit_card
  bank_transfer
}

enum shipment_status {
  pending
  in_transit
  delivered
  returned
}

// models
model users {
  id         String      @id @default(uuid()) @db.Uuid
  username   String      @unique
  email      String      @unique
  role       user_roles? @default(customer)
  orders     orders[]
  created_at DateTime    @default(now()) @db.Timestamptz(6)
  updated_at DateTime    @default(now()) @updatedAt @db.Timestamptz(6)
}

model products {
  id          String        @id @default(uuid()) @db.Uuid
  name        String
  description String?
  price_cents Int
  quantity    Int
  order_items order_items[]
  created_at  DateTime      @default(now()) @db.Timestamptz(6)
  updated_at  DateTime      @default(now()) @updatedAt @db.Timestamptz(6)
}

model orders {
  id                 String        @id @default(uuid()) @db.Uuid
  user_id            String?       @db.Uuid
  user               users?        @relation(fields: [user_id], references: [id], onDelete: SetNull)
  status             order_status
  total_amount_cents Int
  items              order_items[]
  payments           payments[]
  shipments          shipments[]
  created_at         DateTime      @default(now()) @db.Timestamptz(6)
  updated_at         DateTime      @default(now()) @updatedAt @db.Timestamptz(6)
}

model order_items {
  id          String    @id @default(uuid()) @db.Uuid
  order_id    String    @db.Uuid
  order       orders    @relation(fields: [order_id], references: [id], onDelete: Cascade)
  product_id  String?   @db.Uuid
  product     products? @relation(fields: [product_id], references: [id], onDelete: SetNull)
  quantity    Int
  price_cents Int
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
}

model shipments {
  id                 String          @id @default(uuid()) @db.Uuid
  order_id           String          @db.Uuid
  order              orders          @relation(fields: [order_id], references: [id], onDelete: Cascade)
  status             shipment_status
  shipping_address   String
  tracking_number    String?         @unique
  estimated_delivery DateTime?
  actual_delivery    DateTime?
  created_at         DateTime        @default(now()) @db.Timestamptz(6)
  updated_at         DateTime        @default(now()) @updatedAt @db.Timestamptz(6)
}

model payments {
  id              String            @id @default(uuid()) @db.Uuid
  order_id        String            @db.Uuid
  order           orders            @relation(fields: [order_id], references: [id], onDelete: Cascade)
  amount_cents    Int
  payment_method  payment_method
  transaction_id  String
  status          payment_status
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  updated_at      DateTime          @default(now()) @updatedAt @db.Timestamptz(6)
}